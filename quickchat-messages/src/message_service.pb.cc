// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_service.proto

#include "message_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Message_message_2eproto;
namespace srv {
class GetMessageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMessageRequest> _instance;
} _GetMessageRequest_default_instance_;
class GetMessageReponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMessageReponse> _instance;
} _GetMessageReponse_default_instance_;
class GetMessagesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMessagesRequest> _instance;
} _GetMessagesRequest_default_instance_;
class GetMessagesReponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMessagesReponse> _instance;
} _GetMessagesReponse_default_instance_;
class GetLastMessageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLastMessageRequest> _instance;
} _GetLastMessageRequest_default_instance_;
class GetLastMessageReponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLastMessageReponse> _instance;
} _GetLastMessageReponse_default_instance_;
}  // namespace srv
static void InitDefaultsscc_info_GetLastMessageReponse_message_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::srv::_GetLastMessageReponse_default_instance_;
    new (ptr) ::srv::GetLastMessageReponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::srv::GetLastMessageReponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetLastMessageReponse_message_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetLastMessageReponse_message_5fservice_2eproto}, {
      &scc_info_Message_message_2eproto.base,}};

static void InitDefaultsscc_info_GetLastMessageRequest_message_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::srv::_GetLastMessageRequest_default_instance_;
    new (ptr) ::srv::GetLastMessageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::srv::GetLastMessageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLastMessageRequest_message_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLastMessageRequest_message_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetMessageReponse_message_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::srv::_GetMessageReponse_default_instance_;
    new (ptr) ::srv::GetMessageReponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::srv::GetMessageReponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetMessageReponse_message_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetMessageReponse_message_5fservice_2eproto}, {
      &scc_info_Message_message_2eproto.base,}};

static void InitDefaultsscc_info_GetMessageRequest_message_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::srv::_GetMessageRequest_default_instance_;
    new (ptr) ::srv::GetMessageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::srv::GetMessageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetMessageRequest_message_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetMessageRequest_message_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetMessagesReponse_message_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::srv::_GetMessagesReponse_default_instance_;
    new (ptr) ::srv::GetMessagesReponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::srv::GetMessagesReponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetMessagesReponse_message_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetMessagesReponse_message_5fservice_2eproto}, {
      &scc_info_Message_message_2eproto.base,}};

static void InitDefaultsscc_info_GetMessagesRequest_message_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::srv::_GetMessagesRequest_default_instance_;
    new (ptr) ::srv::GetMessagesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::srv::GetMessagesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetMessagesRequest_message_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetMessagesRequest_message_5fservice_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_message_5fservice_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_message_5fservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_message_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_message_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::srv::GetMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::srv::GetMessageRequest, channel_id_),
  PROTOBUF_FIELD_OFFSET(::srv::GetMessageRequest, message_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::srv::GetMessageReponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::srv::GetMessageReponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::srv::GetMessagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::srv::GetMessagesRequest, channel_id_),
  PROTOBUF_FIELD_OFFSET(::srv::GetMessagesRequest, message_id_),
  PROTOBUF_FIELD_OFFSET(::srv::GetMessagesRequest, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::srv::GetMessagesReponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::srv::GetMessagesReponse, messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::srv::GetLastMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::srv::GetLastMessageRequest, channel_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::srv::GetLastMessageReponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::srv::GetLastMessageReponse, message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::srv::GetMessageRequest)},
  { 7, -1, sizeof(::srv::GetMessageReponse)},
  { 13, -1, sizeof(::srv::GetMessagesRequest)},
  { 21, -1, sizeof(::srv::GetMessagesReponse)},
  { 27, -1, sizeof(::srv::GetLastMessageRequest)},
  { 33, -1, sizeof(::srv::GetLastMessageReponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::srv::_GetMessageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::srv::_GetMessageReponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::srv::_GetMessagesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::srv::_GetMessagesReponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::srv::_GetLastMessageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::srv::_GetLastMessageReponse_default_instance_),
};

const char descriptor_table_protodef_message_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025message_service.proto\022\003srv\032\rmessage.pr"
  "oto\";\n\021GetMessageRequest\022\022\n\nchannel_id\030\001"
  " \001(\004\022\022\n\nmessage_id\030\002 \001(\004\"2\n\021GetMessageRe"
  "ponse\022\035\n\007message\030\001 \001(\0132\014.msg.Message\"K\n\022"
  "GetMessagesRequest\022\022\n\nchannel_id\030\001 \001(\004\022\022"
  "\n\nmessage_id\030\002 \001(\004\022\r\n\005count\030\003 \001(\005\"4\n\022Get"
  "MessagesReponse\022\036\n\010messages\030\001 \003(\0132\014.msg."
  "Message\"+\n\025GetLastMessageRequest\022\022\n\nchan"
  "nel_id\030\001 \001(\004\"6\n\025GetLastMessageReponse\022\035\n"
  "\007message\030\001 \001(\0132\014.msg.Message2\331\001\n\016Message"
  "Service\022<\n\nGetMessage\022\026.srv.GetMessageRe"
  "quest\032\026.srv.GetMessageReponse\022\?\n\013GetMess"
  "ages\022\027.srv.GetMessagesRequest\032\027.srv.GetM"
  "essagesReponse\022H\n\016GetLastMessage\022\032.srv.G"
  "etLastMessageRequest\032\032.srv.GetLastMessag"
  "eReponseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_message_5fservice_2eproto_deps[1] = {
  &::descriptor_table_message_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_message_5fservice_2eproto_sccs[6] = {
  &scc_info_GetLastMessageReponse_message_5fservice_2eproto.base,
  &scc_info_GetLastMessageRequest_message_5fservice_2eproto.base,
  &scc_info_GetMessageReponse_message_5fservice_2eproto.base,
  &scc_info_GetMessageRequest_message_5fservice_2eproto.base,
  &scc_info_GetMessagesReponse_message_5fservice_2eproto.base,
  &scc_info_GetMessagesRequest_message_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_message_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_5fservice_2eproto = {
  false, false, descriptor_table_protodef_message_5fservice_2eproto, "message_service.proto", 616,
  &descriptor_table_message_5fservice_2eproto_once, descriptor_table_message_5fservice_2eproto_sccs, descriptor_table_message_5fservice_2eproto_deps, 6, 1,
  schemas, file_default_instances, TableStruct_message_5fservice_2eproto::offsets,
  file_level_metadata_message_5fservice_2eproto, 6, file_level_enum_descriptors_message_5fservice_2eproto, file_level_service_descriptors_message_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_message_5fservice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_message_5fservice_2eproto)), true);
namespace srv {

// ===================================================================

void GetMessageRequest::InitAsDefaultInstance() {
}
class GetMessageRequest::_Internal {
 public:
};

GetMessageRequest::GetMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:srv.GetMessageRequest)
}
GetMessageRequest::GetMessageRequest(const GetMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel_id_, &from.channel_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&message_id_) -
    reinterpret_cast<char*>(&channel_id_)) + sizeof(message_id_));
  // @@protoc_insertion_point(copy_constructor:srv.GetMessageRequest)
}

void GetMessageRequest::SharedCtor() {
  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_id_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(message_id_));
}

GetMessageRequest::~GetMessageRequest() {
  // @@protoc_insertion_point(destructor:srv.GetMessageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetMessageRequest::ArenaDtor(void* object) {
  GetMessageRequest* _this = reinterpret_cast< GetMessageRequest* >(object);
  (void)_this;
}
void GetMessageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMessageRequest& GetMessageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMessageRequest_message_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:srv.GetMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_id_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(message_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMessageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 channel_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          channel_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 message_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMessageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:srv.GetMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_channel_id(), target);
  }

  // uint64 message_id = 2;
  if (this->message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_message_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srv.GetMessageRequest)
  return target;
}

size_t GetMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srv.GetMessageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_channel_id());
  }

  // uint64 message_id = 2;
  if (this->message_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_message_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srv.GetMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMessageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srv.GetMessageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srv.GetMessageRequest)
    MergeFrom(*source);
  }
}

void GetMessageRequest::MergeFrom(const GetMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srv.GetMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    _internal_set_channel_id(from._internal_channel_id());
  }
  if (from.message_id() != 0) {
    _internal_set_message_id(from._internal_message_id());
  }
}

void GetMessageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srv.GetMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageRequest::CopyFrom(const GetMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srv.GetMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageRequest::IsInitialized() const {
  return true;
}

void GetMessageRequest::InternalSwap(GetMessageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMessageRequest, message_id_)
      + sizeof(GetMessageRequest::message_id_)
      - PROTOBUF_FIELD_OFFSET(GetMessageRequest, channel_id_)>(
          reinterpret_cast<char*>(&channel_id_),
          reinterpret_cast<char*>(&other->channel_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMessageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMessageReponse::InitAsDefaultInstance() {
  ::srv::_GetMessageReponse_default_instance_._instance.get_mutable()->message_ = const_cast< ::msg::Message*>(
      ::msg::Message::internal_default_instance());
}
class GetMessageReponse::_Internal {
 public:
  static const ::msg::Message& message(const GetMessageReponse* msg);
};

const ::msg::Message&
GetMessageReponse::_Internal::message(const GetMessageReponse* msg) {
  return *msg->message_;
}
void GetMessageReponse::clear_message() {
  if (GetArena() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
}
GetMessageReponse::GetMessageReponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:srv.GetMessageReponse)
}
GetMessageReponse::GetMessageReponse(const GetMessageReponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_message()) {
    message_ = new ::msg::Message(*from.message_);
  } else {
    message_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:srv.GetMessageReponse)
}

void GetMessageReponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetMessageReponse_message_5fservice_2eproto.base);
  message_ = nullptr;
}

GetMessageReponse::~GetMessageReponse() {
  // @@protoc_insertion_point(destructor:srv.GetMessageReponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMessageReponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete message_;
}

void GetMessageReponse::ArenaDtor(void* object) {
  GetMessageReponse* _this = reinterpret_cast< GetMessageReponse* >(object);
  (void)_this;
}
void GetMessageReponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMessageReponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMessageReponse& GetMessageReponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMessageReponse_message_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetMessageReponse::Clear() {
// @@protoc_insertion_point(message_clear_start:srv.GetMessageReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMessageReponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .msg.Message message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMessageReponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:srv.GetMessageReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .msg.Message message = 1;
  if (this->has_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srv.GetMessageReponse)
  return target;
}

size_t GetMessageReponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srv.GetMessageReponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .msg.Message message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *message_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessageReponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srv.GetMessageReponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessageReponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMessageReponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srv.GetMessageReponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srv.GetMessageReponse)
    MergeFrom(*source);
  }
}

void GetMessageReponse::MergeFrom(const GetMessageReponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srv.GetMessageReponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    _internal_mutable_message()->::msg::Message::MergeFrom(from._internal_message());
  }
}

void GetMessageReponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srv.GetMessageReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageReponse::CopyFrom(const GetMessageReponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srv.GetMessageReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageReponse::IsInitialized() const {
  return true;
}

void GetMessageReponse::InternalSwap(GetMessageReponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(message_, other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMessageReponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMessagesRequest::InitAsDefaultInstance() {
}
class GetMessagesRequest::_Internal {
 public:
};

GetMessagesRequest::GetMessagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:srv.GetMessagesRequest)
}
GetMessagesRequest::GetMessagesRequest(const GetMessagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&channel_id_, &from.channel_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&channel_id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:srv.GetMessagesRequest)
}

void GetMessagesRequest::SharedCtor() {
  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(count_));
}

GetMessagesRequest::~GetMessagesRequest() {
  // @@protoc_insertion_point(destructor:srv.GetMessagesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMessagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetMessagesRequest::ArenaDtor(void* object) {
  GetMessagesRequest* _this = reinterpret_cast< GetMessagesRequest* >(object);
  (void)_this;
}
void GetMessagesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMessagesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMessagesRequest& GetMessagesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMessagesRequest_message_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetMessagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:srv.GetMessagesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&channel_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&channel_id_)) + sizeof(count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMessagesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 channel_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          channel_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 message_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMessagesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:srv.GetMessagesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_channel_id(), target);
  }

  // uint64 message_id = 2;
  if (this->message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_message_id(), target);
  }

  // int32 count = 3;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srv.GetMessagesRequest)
  return target;
}

size_t GetMessagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srv.GetMessagesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_channel_id());
  }

  // uint64 message_id = 2;
  if (this->message_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_message_id());
  }

  // int32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessagesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srv.GetMessagesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessagesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMessagesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srv.GetMessagesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srv.GetMessagesRequest)
    MergeFrom(*source);
  }
}

void GetMessagesRequest::MergeFrom(const GetMessagesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srv.GetMessagesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    _internal_set_channel_id(from._internal_channel_id());
  }
  if (from.message_id() != 0) {
    _internal_set_message_id(from._internal_message_id());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
}

void GetMessagesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srv.GetMessagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessagesRequest::CopyFrom(const GetMessagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srv.GetMessagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessagesRequest::IsInitialized() const {
  return true;
}

void GetMessagesRequest::InternalSwap(GetMessagesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMessagesRequest, count_)
      + sizeof(GetMessagesRequest::count_)
      - PROTOBUF_FIELD_OFFSET(GetMessagesRequest, channel_id_)>(
          reinterpret_cast<char*>(&channel_id_),
          reinterpret_cast<char*>(&other->channel_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMessagesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMessagesReponse::InitAsDefaultInstance() {
}
class GetMessagesReponse::_Internal {
 public:
};

void GetMessagesReponse::clear_messages() {
  messages_.Clear();
}
GetMessagesReponse::GetMessagesReponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  messages_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:srv.GetMessagesReponse)
}
GetMessagesReponse::GetMessagesReponse(const GetMessagesReponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:srv.GetMessagesReponse)
}

void GetMessagesReponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetMessagesReponse_message_5fservice_2eproto.base);
}

GetMessagesReponse::~GetMessagesReponse() {
  // @@protoc_insertion_point(destructor:srv.GetMessagesReponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMessagesReponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetMessagesReponse::ArenaDtor(void* object) {
  GetMessagesReponse* _this = reinterpret_cast< GetMessagesReponse* >(object);
  (void)_this;
}
void GetMessagesReponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMessagesReponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMessagesReponse& GetMessagesReponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMessagesReponse_message_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetMessagesReponse::Clear() {
// @@protoc_insertion_point(message_clear_start:srv.GetMessagesReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMessagesReponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .msg.Message messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMessagesReponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:srv.GetMessagesReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .msg.Message messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_messages_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_messages(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srv.GetMessagesReponse)
  return target;
}

size_t GetMessagesReponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srv.GetMessagesReponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .msg.Message messages = 1;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMessagesReponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srv.GetMessagesReponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMessagesReponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMessagesReponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srv.GetMessagesReponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srv.GetMessagesReponse)
    MergeFrom(*source);
  }
}

void GetMessagesReponse::MergeFrom(const GetMessagesReponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srv.GetMessagesReponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void GetMessagesReponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srv.GetMessagesReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessagesReponse::CopyFrom(const GetMessagesReponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srv.GetMessagesReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessagesReponse::IsInitialized() const {
  return true;
}

void GetMessagesReponse::InternalSwap(GetMessagesReponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMessagesReponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLastMessageRequest::InitAsDefaultInstance() {
}
class GetLastMessageRequest::_Internal {
 public:
};

GetLastMessageRequest::GetLastMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:srv.GetLastMessageRequest)
}
GetLastMessageRequest::GetLastMessageRequest(const GetLastMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:srv.GetLastMessageRequest)
}

void GetLastMessageRequest::SharedCtor() {
  channel_id_ = PROTOBUF_ULONGLONG(0);
}

GetLastMessageRequest::~GetLastMessageRequest() {
  // @@protoc_insertion_point(destructor:srv.GetLastMessageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLastMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLastMessageRequest::ArenaDtor(void* object) {
  GetLastMessageRequest* _this = reinterpret_cast< GetLastMessageRequest* >(object);
  (void)_this;
}
void GetLastMessageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLastMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLastMessageRequest& GetLastMessageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLastMessageRequest_message_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetLastMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:srv.GetLastMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLastMessageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 channel_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          channel_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLastMessageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:srv.GetLastMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 channel_id = 1;
  if (this->channel_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_channel_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srv.GetLastMessageRequest)
  return target;
}

size_t GetLastMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srv.GetLastMessageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_channel_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLastMessageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srv.GetLastMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLastMessageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLastMessageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srv.GetLastMessageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srv.GetLastMessageRequest)
    MergeFrom(*source);
  }
}

void GetLastMessageRequest::MergeFrom(const GetLastMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srv.GetLastMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id() != 0) {
    _internal_set_channel_id(from._internal_channel_id());
  }
}

void GetLastMessageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srv.GetLastMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLastMessageRequest::CopyFrom(const GetLastMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srv.GetLastMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLastMessageRequest::IsInitialized() const {
  return true;
}

void GetLastMessageRequest::InternalSwap(GetLastMessageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(channel_id_, other->channel_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLastMessageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLastMessageReponse::InitAsDefaultInstance() {
  ::srv::_GetLastMessageReponse_default_instance_._instance.get_mutable()->message_ = const_cast< ::msg::Message*>(
      ::msg::Message::internal_default_instance());
}
class GetLastMessageReponse::_Internal {
 public:
  static const ::msg::Message& message(const GetLastMessageReponse* msg);
};

const ::msg::Message&
GetLastMessageReponse::_Internal::message(const GetLastMessageReponse* msg) {
  return *msg->message_;
}
void GetLastMessageReponse::clear_message() {
  if (GetArena() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
}
GetLastMessageReponse::GetLastMessageReponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:srv.GetLastMessageReponse)
}
GetLastMessageReponse::GetLastMessageReponse(const GetLastMessageReponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_message()) {
    message_ = new ::msg::Message(*from.message_);
  } else {
    message_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:srv.GetLastMessageReponse)
}

void GetLastMessageReponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLastMessageReponse_message_5fservice_2eproto.base);
  message_ = nullptr;
}

GetLastMessageReponse::~GetLastMessageReponse() {
  // @@protoc_insertion_point(destructor:srv.GetLastMessageReponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLastMessageReponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete message_;
}

void GetLastMessageReponse::ArenaDtor(void* object) {
  GetLastMessageReponse* _this = reinterpret_cast< GetLastMessageReponse* >(object);
  (void)_this;
}
void GetLastMessageReponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLastMessageReponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLastMessageReponse& GetLastMessageReponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLastMessageReponse_message_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetLastMessageReponse::Clear() {
// @@protoc_insertion_point(message_clear_start:srv.GetLastMessageReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLastMessageReponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .msg.Message message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLastMessageReponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:srv.GetLastMessageReponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .msg.Message message = 1;
  if (this->has_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:srv.GetLastMessageReponse)
  return target;
}

size_t GetLastMessageReponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:srv.GetLastMessageReponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .msg.Message message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *message_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLastMessageReponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:srv.GetLastMessageReponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLastMessageReponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLastMessageReponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:srv.GetLastMessageReponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:srv.GetLastMessageReponse)
    MergeFrom(*source);
  }
}

void GetLastMessageReponse::MergeFrom(const GetLastMessageReponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:srv.GetLastMessageReponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    _internal_mutable_message()->::msg::Message::MergeFrom(from._internal_message());
  }
}

void GetLastMessageReponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:srv.GetLastMessageReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLastMessageReponse::CopyFrom(const GetLastMessageReponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:srv.GetLastMessageReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLastMessageReponse::IsInitialized() const {
  return true;
}

void GetLastMessageReponse::InternalSwap(GetLastMessageReponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(message_, other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLastMessageReponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace srv
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::srv::GetMessageRequest* Arena::CreateMaybeMessage< ::srv::GetMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::srv::GetMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::srv::GetMessageReponse* Arena::CreateMaybeMessage< ::srv::GetMessageReponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::srv::GetMessageReponse >(arena);
}
template<> PROTOBUF_NOINLINE ::srv::GetMessagesRequest* Arena::CreateMaybeMessage< ::srv::GetMessagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::srv::GetMessagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::srv::GetMessagesReponse* Arena::CreateMaybeMessage< ::srv::GetMessagesReponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::srv::GetMessagesReponse >(arena);
}
template<> PROTOBUF_NOINLINE ::srv::GetLastMessageRequest* Arena::CreateMaybeMessage< ::srv::GetLastMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::srv::GetLastMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::srv::GetLastMessageReponse* Arena::CreateMaybeMessage< ::srv::GetLastMessageReponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::srv::GetLastMessageReponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
